# Default values for buildkitd-autoscaler chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 932043103545.dkr.ecr.us-west-2.amazonaws.com/buildkitd-proxy
  pullPolicy: IfNotPresent
  tag: c3dd5b59

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Namespace to deploy all resources into. If not set, it defaults to the release namespace.
# If set, the 00-namespace.yaml template will try to create it if namespace.create is true.
namespaceOverride: buildkitd-scaler-system

namespace:
  create: true # Set to true to create the namespace defined in namespaceOverride or a default one if namespaceOverride is empty.

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "buildkitd-autoscaler-sa"

rbac:
  # Specifies whether RBAC resources (Role, RoleBinding) should be created
  create: true

# Autoscaler application specific configuration
# These will be set as environment variables in the deployment
autoscalerConfig:
  proxyListenAddr: ":8372"
  buildkitdStatefulSetName: "buildkitd"
  buildkitdStatefulSetNamespace: "default"
  buildkitdHeadlessServiceName: "buildkitd-headless"
  buildkitdTargetPort: "8273" # Default buildkitd gRPC port
  scaleDownIdleTimeout: "2m0s"
  readyWaitTimeout: "5m0s"
  # kubeconfigPath is typically not needed when running in-cluster
  # kubeconfigPath: ""
  logLevel: "debug" # Example, if you add log level config to the app

service:
  type: LoadBalancer
  port: 80 # External port for the LoadBalancer/NodePort
  targetPort: 8372 # Internal port of the autoscaler (must match autoscalerConfig.proxyListenAddr port)
  # nodePort: # Specify if service.type is NodePort

# Pod resource requests and limits
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with
# constrained resources, such as Minikube. If you do specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources:
  requests:
    cpu: "50m"
    memory: "32Mi"
  limits:
    cpu: "100m"
    memory: "64Mi"

nodeSelector: {}

tolerations: []

affinity: {}